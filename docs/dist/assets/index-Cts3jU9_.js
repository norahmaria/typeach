import{r as h,a as D,W as B,p as L,g as k,f as $,a4 as G,d as u,u as d,h as p,y as j,z as P,k as _,x as m,n as l,U as S,i as I,j as v,c as C,o as b,a5 as y,v as V}from"./index-tvZMCYyo.js";const f=Symbol("peachy-input"),M=(o,a,s,e)=>{const n=a.value,t=h([]),i=h([]);return D(i,r=>{const c=document.getElementById(o.value);if(B(c)){const E=[...r,...t.value].join(", "),g=!!r.length;c.setAttribute("aria-describeby",E),c.setAttribute("aria-invalid",`${!!g}`)}}),L(f,{id:k(o),addError(r){i.value=[...i.value,r]},removeError(r){i.value=i.value.filter(c=>c!==r)},addDescription(r){t.value=[...t.value,r]},removeDescription(r){t.value=t.value.filter(c=>c!==r)}}),{initialValue:n,hasErrors:$(()=>!!i.value.length),validate(){s("clear-validation"),s("validate",a.value)},validateWithValue(r){s("clear-validation"),s("validate",r)},reset(){a.value=n,s("clear-validation")},clearErrors:G(()=>{s("clear-validation")},250),changed:$(()=>!e.isSame(n,a.value))}},w=u({__name:"Input",props:{is:{default:"div"}},setup(o){const{inputClass:a}=d("input");return(s,e)=>(p(),j(S(s.is),{class:m(l(a)())},{default:P(()=>[_(s.$slots,"default")]),_:3},8,["class"]))}}),z=["for"],A=u({__name:"InputLabel",setup(o){const{labelClass:a}=d("input",["label"]),s=I(f);return(e,n)=>{var t;return p(),v("label",{for:l((t=l(s))==null?void 0:t.id),class:m(l(a)())},[_(e.$slots,"default")],10,z)}}}),T=["id"],U=u({__name:"InputDescription",props:{id:{default:()=>C()}},setup(o){const a=o,{descriptionClass:s}=d("input",["description"]),e=I(f);return b(()=>{e==null||e.addDescription(a.id)}),y(()=>{e==null||e.removeDescription(a.id)}),(n,t)=>(p(),v("p",{id:n.id,class:m(l(s)())},[_(n.$slots,"default")],10,T))}}),W=["id"],x=u({__name:"InputError",props:{id:{default:()=>C()}},setup(o){const a=o,{errorClass:s}=d("input",["error"]),e=I(f),n=h(!1);return b(()=>{setTimeout(()=>{n.value=!0},0)}),b(()=>{e==null||e.addError(a.id)}),y(()=>{e==null||e.removeError(a.id)}),(t,i)=>(p(),v("p",{id:t.id,class:m(l(s)()),"aria-live":"assertive"},[n.value?_(t.$slots,"default",{key:0}):V("",!0)],10,W))}}),F=u({__name:"InputGroup",setup(o){const{groupClass:a}=d("input",["group"]);return(s,e)=>(p(),v("fieldset",{class:m(l(a)())},[_(s.$slots,"default")],2))}}),H=u({__name:"InputGroupLabel",setup(o){const{groupLabelClass:a}=d("input",["groupLabel"]);return(s,e)=>(p(),v("legend",{class:m(l(a)())},[_(s.$slots,"default")],2))}}),N={Input:w,Label:A,Description:U,Error:x,Group:F,GroupLabel:H};export{N as P,M as u};
